name: Docker Build Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Set environment'
        required: true
        type: string
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      region:
        required: false
        type: string
        default: sa-east-1
      aws-account:
        required: true
        type: string
      role:
        required: true
        type: string
      build-path:
        required: false
        type: string
        default: .
      dockerfile:
        required: true
        type: string
    outputs:
      image-tag:
        description: "Docker tag image"
        value: ${{ jobs.build-image.outputs.image-tag }}

jobs:
  build-image:
    environment: ${{ inputs.environment }}
    name: Build
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        working-directory: ${{ inputs.build-path }}
    outputs:
      image-tag: ${{ steps.image-tag.outputs.image-tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Tag  
        run: |
          echo "image_tag=${{ inputs.environment }}-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          source $GITHUB_ENV
          echo "Image Tag: $image_tag"
          echo "image-tag=$image_tag" >> $GITHUB_OUTPUT
        id: image-tag
      
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.aws-account }}:role/${{ inputs.role }}
          role-session-name: actionsrolesession
          aws-region: ${{ inputs.region }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: install dependency
        run: |
          npm install --global yarn
      - name: yarn install
        run: |
          yarn install --frozen-lockfile
      - name: yarn tsc
        run: |
          yarn tsc
      - name: yarn build-backend
        run: |
          yarn build:backend --config ../../app-config.yaml --config ../../app-config.production.yaml

      - name: ECR Login
        run: |
          aws ecr get-login-password --region ${{ inputs.region }} | docker login --username AWS --password-stdin ${{ inputs.aws-account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com

      - name: Build Image
        run: | 
          DOCKER_BUILDKIT=1 docker image build -f ${{ inputs.dockerfile }} -t ${{ inputs.aws-account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ github.repository }}:${{ env.image_tag }} .
          docker image tag ${{ inputs.aws-account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ github.repository }}:${{ env.image_tag }} ${{ inputs.aws-account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ github.repository }}:latest

      - name: Push to ECR
        run: |
          docker image push ${{ inputs.aws-account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ github.repository }}:${{ env.image_tag }}
          docker image push ${{ inputs.aws-account }}.dkr.ecr.${{ inputs.region }}.amazonaws.com/${{ github.repository }}:latest
