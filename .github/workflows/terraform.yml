name: Deploy AWS Infrastructure

on:
  workflow_call:
    inputs:
      runs-on:
        required: false
        type: string
        default: ubuntu-latest
      working-directory:
        required: false
        type: string
        default: .infra-repo
      environment:
        required: true
        type: string
        default: dev
      region:
        required: false
        type: string
        default: sa-east-1
      role:
        required: true
        type: string
      bucket:
        required: true
        type: string
      app:
        required: true
        type: string
      aws-account:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
       
jobs:
  terraform:
    environment: ${{ inputs.environment }}
    name: IaC
    runs-on: ${{ inputs.runs-on }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v2
      
      - name: Terraform Init
        id: init
        run: |
          terraform init \
          -backend-config="bucket=${{ inputs.bucket }}" \
          -backend-config="key=infra/${{ inputs.app }}/terraform.tfstate" \
          -backend-config="region=${{ inputs.region }}" \
          -backend-config="role_arn=arn:aws:iam::${{ inputs.aws-account }}:role/${{ inputs.role }}"

      - name: Terraform Workspace
        run: |
          if [ ${{ inputs.environment }} = prd ]; then 
          terraform workspace select prd || terraform workspace new prd
          terraform workspace select prd
          if else [ ${{ inputs.environment }} = prod ]; then
          terraform workspace select prod || terraform workspace new prod
          terraform workspace select prod
          if else [ ${{ inputs.environment }} = hom ]; then
          terraform workspace select hom || terraform workspace new hom
          terraform workspace select hom
          if else [ ${{ inputs.environment }} = dev ]; then
          terraform workspace select dev || terraform workspace new dev
          terraform workspace select dev
          else
            echo "Workspace invalido!"
            exit 1
          fi
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color 
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false
      
      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -auto-approve
